/* dix-config.h.in: not at all generated.                      -*- c -*- */

#ifndef _DIX_CONFIG_H_
#define _DIX_CONFIG_H_

/* Support BigRequests extension */
#cmakedefine BIGREQS

/* Builder address */
#cmakedefine BUILDERADDR

/* Builder string */
#cmakedefine BUILDERSTRING

/* Default font path */
#cmakedefine COMPILEDDEFAULTFONTPATH

/* Miscellaneous server configuration files path */
#cmakedefine SERVER_MISC_CONFIG_PATH

/* Support Composite Extension */
#cmakedefine COMPOSITE @COMPOSITE@

/* Support Damage extension */
#cmakedefine DAMAGE @DAMAGE@

/* Use OsVendorVErrorF */
#cmakedefine DDXOSVERRORF

/* Use ddxBeforeReset */
#cmakedefine DDXBEFORERESET

/* Build DPMS extension */
#cmakedefine DPMSExtension

/* Build DRI3 extension */
#cmakedefine DRI3

/* Build GLX extension */
#cmakedefine GLXEXT

/* Build GLX DRI loader */
#cmakedefine GLX_DRI

/* Path to DRI drivers */
#cmakedefine DRI_DRIVER_PATH

/* Support XDM-AUTH*-1 */
#cmakedefine HASXDMAUTH

/* Support SHM */
#cmakedefine HAS_SHM

/* Has backtrace support */
#cmakedefine HAVE_BACKTRACE

/* Has libunwind support */
#cmakedefine HAVE_LIBUNWIND

/* Define to 1 if you have the `cbrt' function. */
#cmakedefine HAVE_CBRT

/* Define to 1 if you have the declaration of `program_invocation_short_name', and
   to 0 if you don't. */
#cmakedefine HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME

/* Define to 1 if you have the <dirent.h> header file, and it defines `DIR'.
   */
#cmakedefine HAVE_DIRENT_H

/* Define to 1 if you have the <dlfcn.h> header file. */
#cmakedefine HAVE_DLFCN_H

/* Have execinfo.h */
#cmakedefine HAVE_EXECINFO_H

/* Define to 1 if you have the <fcntl.h> header file. */
#cmakedefine HAVE_FCNTL_H

/* Define to 1 if you have the `getdtablesize' function. */
#cmakedefine HAVE_GETDTABLESIZE

/* Define to 1 if you have the `getifaddrs' function. */
#cmakedefine HAVE_GETIFADDRS

/* Define to 1 if you have the `getpeereid' function. */
#cmakedefine HAVE_GETPEEREID

/* Define to 1 if you have the `getpeerucred' function. */
#cmakedefine HAVE_GETPEERUCRED

/* Define to 1 if you have the `getprogname' function. */
#cmakedefine HAVE_GETPROGNAME

/* Define to 1 if you have the `getzoneid' function. */
#cmakedefine HAVE_GETZONEID

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H

/* Have Quartz */
#cmakedefine XQUARTZ

/* Support application updating through sparkle. */
#cmakedefine XQUARTZ_SPARKLE

/* Prefix to use for bundle identifiers */
#cmakedefine BUNDLE_ID_PREFIX

/* Build a standalone xpbproxy */
#cmakedefine STANDALONE_XPBPROXY

/* Define to 1 if you have the `bsd' library (-lbsd). */
#cmakedefine HAVE_LIBBSD

/* Define to 1 if you have the `m' library (-lm). */
#cmakedefine HAVE_LIBM

/* Define to 1 if you have the <linux/agpgart.h> header file. */
#cmakedefine HAVE_LINUX_AGPGART_H

/* Define to 1 if you have the <linux/apm_bios.h> header file. */
#cmakedefine HAVE_LINUX_APM_BIOS_H

/* Define to 1 if you have the <linux/fb.h> header file. */
#cmakedefine HAVE_LINUX_FB_H

/* Define to 1 if you have the `memfd_create' function. */
#cmakedefine HAVE_MEMFD_CREATE

/* Define to 1 if you have the `mkostemp' function. */
#cmakedefine HAVE_MKOSTEMP

/* Define to 1 if you have the `mmap' function. */
#cmakedefine HAVE_MMAP

/* Define to 1 if you have the function pthread_setname_np(const char*) */
#cmakedefine HAVE_PTHREAD_SETNAME_NP_WITHOUT_TID

/* Define to 1 if you have the function pthread_setname_np(pthread_t, const char*) */
#cmakedefine HAVE_PTHREAD_SETNAME_NP_WITH_TID

/* Define to 1 if you have the <ndir.h> header file, and it defines `DIR'. */
#cmakedefine HAVE_NDIR_H

/* Define to 1 if you have the `reallocarray' function. */
#cmakedefine HAVE_REALLOCARRAY

/* Define to 1 if you have the `arc4random_buf' function. */
#cmakedefine HAVE_ARC4RANDOM_BUF

/* Define to use libc SHA1 functions */
#cmakedefine HAVE_SHA1_IN_LIBC

/* Define to use CommonCrypto SHA1 functions */
#cmakedefine HAVE_SHA1_IN_COMMONCRYPTO

/* Define to use CryptoAPI SHA1 functions */
#cmakedefine HAVE_SHA1_IN_CRYPTOAPI

/* Define to use libmd SHA1 functions */
#cmakedefine HAVE_SHA1_IN_LIBMD

/* Define to use libgcrypt SHA1 functions */
#cmakedefine HAVE_SHA1_IN_LIBGCRYPT

/* Define to use libnettle SHA1 functions */
#cmakedefine HAVE_SHA1_IN_LIBNETTLE

/* Define to use libsha1 for SHA1 */
#cmakedefine HAVE_SHA1_IN_LIBSHA1

/* Define to 1 if you have the `shmctl64' function. */
#cmakedefine HAVE_SHMCTL64

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H

/* Define to 1 if you have the `strcasecmp' function. */
#cmakedefine HAVE_STRCASECMP

/* Define to 1 if you have the `strcasestr' function. */
#cmakedefine HAVE_STRCASESTR

/* Define to 1 if you have the `strncasecmp' function. */
#cmakedefine HAVE_STRNCASECMP

/* Define to 1 if you have the `strlcat' function. */
#cmakedefine HAVE_STRLCAT

/* Define to 1 if you have the `strlcpy' function. */
#cmakedefine HAVE_STRLCPY

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H

/* Define to 1 if you have the `strndup' function. */
#cmakedefine HAVE_STRNDUP

/* Define to 1 if libsystemd-daemon is available */
#cmakedefine HAVE_SYSTEMD_DAEMON

/* Define to 1 if SYSV IPC is available */
#cmakedefine HAVE_SYSV_IPC

/* Define to 1 if you have the <sys/agpio.h> header file. */
#cmakedefine HAVE_SYS_AGPIO_H

/* Define to 1 if you have the <sys/dir.h> header file, and it defines `DIR'.
   */
#cmakedefine HAVE_SYS_DIR_H

/* Define to 1 if you have the <sys/ndir.h> header file, and it defines `DIR'.
   */
#cmakedefine HAVE_SYS_NDIR_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H

/* Define to 1 if you have the <sys/utsname.h> header file. */
#cmakedefine HAVE_SYS_UTSNAME_H

/* Define to 1 if you have the `timingsafe_memcmp' function. */
#cmakedefine HAVE_TIMINGSAFE_MEMCMP

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H

/* Define to 1 if you have the <fnmatch.h> header file. */
#cmakedefine HAVE_FNMATCH_H

/* Have /dev/urandom */
#cmakedefine HAVE_URANDOM

/* Define to 1 if you have the `vasprintf' function. */
#cmakedefine HAVE_VASPRINTF

/* Support IPv6 for TCP connections */
#cmakedefine IPv6

/* Support os-specific local connections */
#cmakedefine LOCALCONN

/* Support MIT-SHM Extension */
#cmakedefine MITSHM

/* Enable some debugging code */
#cmakedefine DEBUG

/* Name of package */
#cmakedefine PACKAGE

/* Internal define for Xinerama */
#cmakedefine PANORAMIX

/* Support Present extension */
#cmakedefine PRESENT

/* Overall prefix */
#cmakedefine PROJECTROOT

/* Support RANDR extension */
#cmakedefine RANDR

/* Support Record extension */
#cmakedefine XRECORD

/* Support RENDER extension */
#cmakedefine RENDER

/* Support X resource extension */
#cmakedefine RES

/* Support client ID tracking in X resource extension */
#cmakedefine CLIENTIDS

/* Support MIT-SCREEN-SAVER extension */
#cmakedefine SCREENSAVER

/* Support Secure RPC ("SUN-DES-1") authentication for X11 clients */
#cmakedefine SECURE_RPC

/* Support SHAPE extension */
#cmakedefine SHAPE

/* Where to install Xorg.bin and Xorg.wrap */
#cmakedefine SUID_WRAPPER_DIR

/* Define to 1 on systems derived from System V Release 4 */
#cmakedefine SVR4

/* sysconfdir */
#cmakedefine SYSCONFDIR

/* Support TCP socket connections */
#cmakedefine TCPCONN

/* Support UNIX socket connections */
#cmakedefine UNIXCONN

/* Build X string registry */
#cmakedefine XREGISTRY

/* Build X-ACE extension */
#cmakedefine XACE

/* Build SELinux extension */
#cmakedefine XSELINUX

/* Support XCMisc extension */
#cmakedefine XCMISC

/* Build Security extension */
#cmakedefine XCSECURITY

/* Support Xdmcp */
#cmakedefine XDMCP

/* Build XFree86 BigFont extension */
#cmakedefine XF86BIGFONT

/* Support XFree86 Video Mode extension */
#cmakedefine XF86VIDMODE

/* Support XFixes extension */
#cmakedefine XFIXES

/* Build XDGA support */
#cmakedefine XFreeXDGA

/* Support Xinerama extension */
#cmakedefine XINERAMA

/* Current Xorg version */
#cmakedefine XORG_VERSION_CURRENT

/* Build Xv Extension */
#cmakedefine XvExtension

/* Build XvMC Extension */
#cmakedefine XvMCExtension

/* Support XSync extension */
#cmakedefine XSYNC @XSYNC@

/* Support XTest extension */
#cmakedefine XTEST @XTEST@

/* Support Xv extension */
#cmakedefine XV @XV@

/* Support DRI extension */
#cmakedefine XF86DRI @XF86DRI@

/* Build DRI2 extension */
#cmakedefine DRI2 @DRI2@

/* Build DBE support */
#cmakedefine DBE @DBE@

/* Vendor name */
#cmakedefine XVENDORNAME @XVENDORNAME@

/* Number of bits in a file offset, on hosts where this is settable. */
#cmakedefine _FILE_OFFSET_BITS

/* Enable GNU and other extensions to the C environment for GLIBC */
#cmakedefine _GNU_SOURCE

/* Define for large files, on AIX-style hosts. */
#cmakedefine _LARGE_FILES

/* Define to empty if `const' does not conform to ANSI C. */
#cmakedefine const

/* Define to `int' if <sys/types.h> does not define. */
#cmakedefine pid_t @pid_t@

/* Build Rootless code */
#cmakedefine ROOTLESS

/* Define to 1 if unsigned long is 64 bits. */
#cmakedefine _XSERVER64

/* System is BSD-like */
#cmakedefine CSRG_BASED

/* Define to 1 if `struct sockaddr_in' has a `sin_len' member */
#cmakedefine BSD44SOCKETS

/* Support D-Bus */
#cmakedefine HAVE_DBUS

/* Use libudev for input hotplug */
#cmakedefine CONFIG_UDEV

/* Use libudev for kms enumeration */
#cmakedefine CONFIG_UDEV_KMS

/* Use udev_monitor_filter_add_match_tag() */
#cmakedefine HAVE_UDEV_MONITOR_FILTER_ADD_MATCH_TAG

/* Use udev_enumerate_add_match_tag() */
#cmakedefine HAVE_UDEV_ENUMERATE_ADD_MATCH_TAG

/* Enable D-Bus core */
#cmakedefine NEED_DBUS

/* Support HAL for hotplug */
#cmakedefine CONFIG_HAL

/* Enable systemd-logind integration */
#cmakedefine SYSTEMD_LOGIND

/* Have a monotonic clock from clock_gettime() */
#cmakedefine MONOTONIC_CLOCK

/* Define to 1 if the DTrace Xserver provider probes should be built in */
#cmakedefine XSERVER_DTRACE

/* Define to 1 if typeof works with your compiler. */
#cmakedefine HAVE_TYPEOF

/* Define to __typeof__ if your compiler spells it that way. */
#cmakedefine typeof

/* Correctly set _XSERVER64 for OSX fat binaries */
#ifdef __APPLE__
#include "dix-config-apple-verbatim.h"
#endif

/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# undef __EXTENSIONS__
#endif

/* Defined if needed to expose struct msghdr.msg_control */
#cmakedefine _XOPEN_SOURCE

/* Have support for X shared memory fence library (xshmfence) */
#cmakedefine HAVE_XSHMFENCE

/* Use XTrans FD passing support */
#cmakedefine XTRANS_SEND_FDS

/* Wrap SIGBUS to catch MIT-SHM faults */
#cmakedefine BUSFAULT

/* Don't let Xdefs.h define 'pointer' */
#define _XTYPEDEF_POINTER       1

/* Don't let XIproto define 'Pointer' */
#define _XITYPEDEF_POINTER      1

/* Ask fontsproto to make font path element names const */
#define FONT_PATH_ELEMENT_NAME_CONST    1

/* Build GLAMOR */
#cmakedefine GLAMOR

/* Build glamor's GBM-based EGL support */
#cmakedefine GLAMOR_HAS_GBM

/* Build glamor/gbm has linear support */
#cmakedefine GLAMOR_HAS_GBM_LINEAR

/* GBM has modifiers support */
#cmakedefine GBM_BO_WITH_MODIFIERS

/* Glamor can use eglQueryDmaBuf* functions */
#cmakedefine GLAMOR_HAS_EGL_QUERY_DMABUF

/* Glamor can use EGL_MESA_query_driver functions */
#cmakedefine GLAMOR_HAS_EGL_QUERY_DRIVER

/* byte order */
#cmakedefine X_BYTE_ORDER @X_BYTE_ORDER@

/* Listen on TCP socket */
#cmakedefine LISTEN_TCP

/* Listen on Unix socket */
#cmakedefine LISTEN_UNIX

/* Listen on local socket */
#cmakedefine LISTEN_LOCAL

/* Define if no local socket credentials interface exists */
#cmakedefine NO_LOCAL_CLIENT_CRED

/* Have setitimer support */
#cmakedefine HAVE_SETITIMER

/* Have posix_fallocate() */
#cmakedefine HAVE_POSIX_FALLOCATE

/* Use input thread */
#cmakedefine INPUTTHREAD

/* Have poll() */
#cmakedefine HAVE_POLL

/* Have epoll_create1() */
#cmakedefine HAVE_EPOLL_CREATE1

/* Have <sys/sysmacros.h> header */
#cmakedefine HAVE_SYS_SYSMACROS_H

/* Have sigprocmask */
#cmakedefine HAVE_SIGPROCMASK

/* Have isastream */
#cmakedefine HAVE_ISASTREAM


#endif /* _DIX_CONFIG_H_ */
